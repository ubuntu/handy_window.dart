name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  FLUTTER_VERSION: 3.16.5

jobs:
  analyze:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: flutter pub get
      - run: flutter analyze

  format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: flutter pub get
      - run: dart format --set-exit-if-changed .

  linux:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: ${{env.FLUTTER_VERSION}}
    - run: sudo apt update
    - run: sudo apt install -y clang cmake curl libgtk-3-dev ninja-build pkg-config unzip xvfb
      env:
        DEBIAN_FRONTEND: noninteractive
    - run: flutter build linux -v
      working-directory: example

  pub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: flutter pub get
      - run: flutter pub publish --dry-run

  snap:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - run: sudo snap install --classic flutter
    - run: flutter channel stable # initialize flutter-snap
    - run: git -C $HOME/snap/flutter/common/flutter checkout ${{env.FLUTTER_VERSION}}
    - run: flutter doctor -v
    - run: flutter build linux -v
      working-directory: example
